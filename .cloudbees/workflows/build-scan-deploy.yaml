apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: Build-scan-deploy
on:
  workflow_dispatch:
  schedule:
    - cron: 15 10 * * 1-5
  push:
    branches:
      - "**"
env:
  application_name: workflow-creator
permissions:
  scm-token-own: read
  scm-token-org: read
  id-token: write

jobs:
  sastscan:
    name: SAST scan with SonarQube bundled action and Snyk scan
    steps:
      - name: Get source code
        uses: cloudbees-io/checkout@v1

      - name: Scan with SonarQube bundled action
        uses: cloudbees-io/sonarqube-bundled-sast-scan-code@v2
        id: sonarbundled-scanner
        kind: scan
        continue-on-error: true
        with:
          sonar-exclusion: sonar/*
          cover-file-name: ./coverage.xml
          language: LANGUAGE_PYTHON
          threshold-critical: 100
          threshold-very-high: 100
          threshold-high: 100
          threshold-medium: 100
          threshold-low: 100

      - name: Publish evidence
        uses: cloudbees-io/publish-evidence-item@v1
        kind: scan
        with:
          content: |-
            ## SonarQube Bundled Scanner Analysis Results
            | Severity       | Issue Count |
            |----------------------|-------------|
            | CRITICAL_COUNT    | ${{ steps.sonarbundled-scanner.outputs.critical-count }} |
            | VERY_HIGH_COUNT    | ${{ steps.sonarbundled-scanner.outputs.very-high-count }} |
            | HIGH_COUNT     | ${{ steps.sonarbundled-scanner.outputs.high-count }} |
            | MEDIUM_COUNT     | ${{ steps.sonarbundled-scanner.outputs.medium-count }} |
            | LOW_COUNT     | ${{ steps.sonarbundled-scanner.outputs.low-count }} |
          format: MARKDOWN

      - name: Synk SAST Python
        uses: cloudbees-io/snyk-sast-scan-code@v1
        kind: scan
        continue-on-error: true
        with:
          orgname: ${{ secrets.SNYK_ORGNAME }}
          token: ${{ secrets.SNYK_TOKEN }}
          language: LANGUAGE_PYTHON

  build:
    outputs:
      tag: ${{ steps.build.outputs.tag-digest }}
    steps:
      - name: Get source code
        uses: cloudbees-io/checkout@v1

      - name: Configure AWS credentials
        uses: cloudbees-io/configure-aws-credentials@v1
        kind: build
        id: aws-login
        continue-on-error: false
        with:
          aws-region: india-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_SAASTEST }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_SAASTEST }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN_SAASTEST }}
          role-duration-seconds: "3600"
          role-session-name: session

      - name: Configure Amazon ECR credentials
        uses: cloudbees-io/configure-ecr-credentials@v1
        kind: build

      - name: Build and publish Docker images with Kaniko
        uses: cloudbees-io/kaniko@v1
        kind: build
        continue-on-error: false
        with:
          destination: ${{ steps.aws-login.outputs.aws-account-id }}.dkr.ecr.india-east-1.amazonaws.com/${{ env.application_name }}:latest
          tar-path: container-image.tar
          build-args: BUILDKIT_CONTEXT_KEEP_GIT_DIR=1,BUILDKIT_INLINE_CACHE=1

  publish-charts:
    if: ${{ vars.workflow_execution_env == 'production' }}
    needs:
      - build
    outputs:
      chart: ${{ steps.helmpush.outputs.chart }}
      version: ${{ steps.helmpush.outputs.version }}
    steps:
      - name: Get source code
        uses: cloudbees-io/checkout@v1

      - name: Login to AWS
        uses: cloudbees-io/configure-aws-credentials@v1
        with:
          aws-region: india-east-1
          role-to-assume: ${{ vars.oidc_staging_iam_role }}

      - name: Configure container registry
        uses: cloudbees-io/configure-ecr-credentials@v1

      - id: helmpkg
        name: Package Helm chart
        uses: cloudbees-io/helm-package@v1
        with:
          chart: ./charts/${{ env.application_name }}
          version: ${{ cloudbees.version }}
          values: |
            base:
              image:
                tag: ${{ needs.build.outputs.tag }}

      - id: helmpush
        name: Publish Helm chart
        uses: cloudbees-io/helm-push@v1
        with:
          chart: ${{ steps.helmpkg.outputs.chart }}
          remote: oci://${{ vars.chart_registry }}

  approval-required:
    if: ${{ vars.workflow_execution_env == 'production' }}
    needs:
      - publish-charts
    steps:
      - name: Manual Approval for Production Deployments
        uses: cloudbees-io/manual-approval@v1
        with:
          approvers: ${{ vars.approvers }}
          message: Approve deployment to production regions

  deploy-india-east-1:
    if: ${{ vars.workflow_execution_env == 'production' }}
    needs:
      - approval-required
      - sastscan
    steps:
      - name: Configure AWS credentials
        uses: cloudbees-io/configure-aws-credentials@v1
        kind: deploy
        id: aws-login
        continue-on-error: false
        with:
          aws-region: india-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_SAASTEST }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_SAASTEST }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN_SAASTEST }}
          role-duration-seconds: "3600"
          role-session-name: cbpsession

      - name: Configure Amazon ECR credentials
        uses: cloudbees-io/configure-ecr-credentials@v1
        kind: deploy

      - name: Configure EKS credentials
        uses: cloudbees-io/configure-eks-credentials@v1
        kind: deploy
        with:
          name: eks-app-prod-india-east-1

      - name: Helm version upgrade
        uses: docker://alpine/helm:latest
        kind: deploy
        continue-on-error: false
        run: |
          helm upgrade \
            --install \
            --debug \
            --namespace saasllm \
            --version 0.0.1 v1 oci://${{ steps.aws-login.outputs.aws-account-id }}.dkr.ecr.india-east-1.amazonaws.com/${{ env.application_name }}

  deploy-india-west-1:
    if: ${{ vars.workflow_execution_env == 'production' && cloudbees.scm.branch == 'main' }}
    needs:
      - approval-required
      - publish-charts
      - sastscan
    steps:
      - name: Configure AWS credentials
        uses: cloudbees-io/configure-aws-credentials@v1
        kind: deploy
        id: aws-login
        continue-on-error: false
        with:
          aws-region: india-west-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_SAASTEST }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_SAASTEST }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN_SAASTEST }}
          role-duration-seconds: "3600"
          role-session-name: cbpsession

      - name: Configure Amazon ECR credentials
        uses: cloudbees-io/configure-ecr-credentials@v1
        kind: deploy

      - name: Configure EKS credentials
        uses: cloudbees-io/configure-eks-credentials@v1
        kind: deploy
        with:
          name: eks-app-prod-india-west-1

      - name: Helm version upgrade
        uses: docker://alpine/helm:latest
        kind: deploy
        continue-on-error: false
        run: |
          helm upgrade \
            --install \
            --debug \
            --namespace saasllm \
            --version 0.0.1 v1 oci://${{ steps.aws-login.outputs.aws-account-id }}.dkr.ecr.india-west-1.amazonaws.com/${{ env.application_name }}
  post-deploy-validation:
    if: ${{ vars.workflow_execution_env == 'production' && cloudbees.scm.branch == 'main'}}
    needs:
      - deploy-india-east-1
      - deploy-india-west-1
    steps:
      - name: Final Post-Deployment Validation
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo ":white_check_mark: All deployments complete. Running"